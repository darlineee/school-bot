import telebot
import gspread
from oauth2client.service_account import ServiceAccountCredentials
from telebot.types import ReplyKeyboardMarkup, KeyboardButton
import time
import requests
import tempfile
import os

# --- –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã ---
TOKEN = os.getenv('TOKEN')  # –¢–æ–∫–µ–Ω –¥–ª—è –±–æ—Ç–∞
SPREADSHEET_ID = os.getenv('SPREADSHEET_ID')  # ID Google –¢–∞–±–ª–∏—Ü—ã
GOOGLE_CREDENTIALS_JSON = os.getenv('GOOGLE_CREDENTIALS_FILE')  # –°–æ–¥–µ—Ä–∂–∏–º–æ–µ JSON —Ñ–∞–π–ª–∞ –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫–∏
ADMIN_IDS = [6916553173]  # –°–ø–∏—Å–æ–∫ ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤

bot = telebot.TeleBot(TOKEN)

# –°–æ—Ö—Ä–∞–Ω—è–µ–º JSON –≤ –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
with tempfile.NamedTemporaryFile(delete=False) as temp_file:
    temp_file.write(GOOGLE_CREDENTIALS_JSON.encode())  # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å—Ç—Ä–æ–∫—É –≤ –±–∞–π—Ç—ã –∏ –∑–∞–ø–∏—Å—ã–≤–∞–µ–º
    temp_file_path = temp_file.name

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Google Sheets
scope = ["https://spreadsheets.google.com/feeds", "https://www.googleapis.com/auth/drive"]
creds = ServiceAccountCredentials.from_json_keyfile_name(temp_file_path, scope)
client = gspread.authorize(creds)
sheet = client.open_by_key(SPREADSHEET_ID)


# --- –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ç–∞–±–ª–∏—Ü ---
sheet_imgs = sheet.worksheet("–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ–§–æ—Ç–æ")
img_records = sheet_imgs.get_all_records()
images_data = {r['–ù–∞–∑–≤–∞–Ω–∏–µ']: r['–ü—É—Ç—å–ö–§–∞–π–ª—É'] for r in img_records}

sheet_bells = sheet.worksheet("–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ–ó–≤–æ–Ω–∫–æ–≤")
bell_records = sheet_bells.get_all_records()
bells_data = {r['–ù–∞–∑–≤–∞–Ω–∏–µ']: r['–¢–µ–∫—Å—Ç'] for r in bell_records}

sheet_users = sheet.worksheet("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏")
sheet_news = sheet.worksheet("–ù–æ–≤–æ—Å—Ç–∏")

sheet_contacts = sheet.worksheet("–ö–æ–Ω—Ç–∞–∫—Ç—ã")
CONTACTS = "\n".join([row[0] for row in sheet_contacts.get_all_values()])

# --- –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ ---

def register_user(user_id):
    existing = [row[0] for row in sheet_users.get_all_values()]
    if str(user_id) not in existing:
        sheet_users.append_row([str(user_id)])

def main_menu(message):
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(KeyboardButton("üóì –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ"), KeyboardButton("üîî –ó–≤–æ–Ω–∫–∏"))
    markup.add(KeyboardButton("üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã"))
    # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤
    if message.chat.id in ADMIN_IDS:
        markup.add(KeyboardButton("‚öôÔ∏è –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"))
    bot.send_message(message.chat.id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —à–∫–æ–ª—å–Ω—ã–π –±–æ—Ç!\n\nüîé–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ —É—Ä–æ–∫–æ–≤, –∑–≤–æ–Ω–∫–æ–≤, –∞ —Ç–∞–∫–∂–µ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏ —Å —à–∫–æ–ª–æ–π.\n\n‚û°Ô∏è–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=markup)

def download_image(url):
    try:
        response = requests.get(url)
        response.raise_for_status()
        temp_file = tempfile.NamedTemporaryFile(delete=False, suffix=".jpg")
        temp_file.write(response.content)
        temp_file.close()
        return temp_file.name
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {e}")
        return None

# --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ ---

@bot.message_handler(commands=['start'])
def handle_start(message):
    register_user(message.chat.id)
    main_menu(message)

@bot.message_handler(func=lambda message: message.text == "üìï 1 —Å–º–µ–Ω–∞")
def send_first_shift_schedule(message):
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π –ø—É—Ç—å –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è 1 —Å–º–µ–Ω—ã
    try:
        with open('snim2.png', 'rb') as photo:
            bot.send_photo(message.chat.id, photo, caption="‚û°Ô∏è –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è 1 —Å–º–µ–Ω—ã")
    except Exception as e:
        bot.send_message(message.chat.id, f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è 1 —Å–º–µ–Ω—ã: {e}")

@bot.message_handler(func=lambda message: message.text == "üìò 2 —Å–º–µ–Ω–∞")
def send_second_shift_schedule(message):
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π –ø—É—Ç—å –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è 2 —Å–º–µ–Ω—ã
    try:
        with open('snim2.png', 'rb') as photo:
            bot.send_photo(message.chat.id, photo, caption="‚û°Ô∏è –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è 2 —Å–º–µ–Ω—ã")
    except Exception as e:
        bot.send_message(message.chat.id, f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è 2 —Å–º–µ–Ω—ã: {e}")

# @bot.message_handler(func=lambda m: m.text in images_data)
# def handle_photo_schedule(message):
#     url_or_path = images_data[message.text]
#     if url_or_path.startswith("http"):
#         local_path = download_image(url_or_path)
#     else:
#         local_path = url_or_path
#     try:
#         with open(local_path, 'rb') as f:
#             bot.send_photo(message.chat.id, f, caption=f"‚û°Ô∏è –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ: {message.text}")
#     except Exception as e:
#         bot.send_message(message.chat.id, f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: {e}")
    

@bot.message_handler(func=lambda message: message.text == "üîî –ó–≤–æ–Ω–∫–∏")
def choose_day(message):
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(KeyboardButton("üìÖ –ü–Ω/–ß—Ç"), KeyboardButton("üìÖ –°–±"))
    markup.add(KeyboardButton("üìÖ –û—Å—Ç–∞–ª—å–Ω—ã–µ –¥–Ω–∏"))
    markup.add(KeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥"))
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏:", reply_markup=markup)

@bot.message_handler(func=lambda m: m.text in bells_data)
def handle_send_bells(message):
    text = bells_data[message.text]
    bot.send_message(message.chat.id, text, parse_mode="Markdown")
    

@bot.message_handler(func=lambda m: m.text == "‚¨ÖÔ∏è –ù–∞–∑–∞–¥")
def handle_back(message):
    main_menu(message)

@bot.message_handler(func=lambda m: m.text == "üóì –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ")
def handle_choose_schedule(message):
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    for name in images_data:
        markup.add(KeyboardButton(name))
    markup.add(KeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥"))
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ:", reply_markup=markup)


@bot.message_handler(func=lambda m: m.text == "üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã")
def handle_contacts(message):
    bot.send_message(message.chat.id, CONTACTS)

# --- –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –∏ –Ω–æ–≤–æ—Å—Ç–∏ ---

def admin_panel(message):
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(KeyboardButton("üìù –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ—Å—Ç—å"))
    markup.add(KeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥"))
    bot.send_message(message.chat.id, "‚öôÔ∏è –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å:", reply_markup=markup)

@bot.message_handler(func=lambda m: m.text == "‚öôÔ∏è –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å")
def handle_admin(message):
    if message.chat.id not in ADMIN_IDS:
        bot.send_message(message.chat.id, "‚ö†Ô∏è –ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞")
        return
    admin_panel(message)

@bot.message_handler(func=lambda m: m.text == "üìù –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ—Å—Ç—å")
def handle_create_news(message):
    if message.chat.id not in ADMIN_IDS:
        bot.send_message(message.chat.id, "‚ö†Ô∏è –ù–µ—Ç –ø—Ä–∞–≤")
        return
    bot.send_message(message.chat.id, "‚û°Ô∏è –í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –Ω–æ–≤–æ—Å—Ç–∏:")
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(KeyboardButton("‚ùå –û—Ç–º–µ–Ω–∏—Ç—å"))
    bot.register_next_step_handler(message, save_news_text)

def save_news_text(message):
    if message.text == "‚ùå –û—Ç–º–µ–Ω–∏—Ç—å":
        admin_panel(message)
        return
    news_text = message.text
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(KeyboardButton("–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å"), KeyboardButton("‚ùå –û—Ç–º–µ–Ω–∏—Ç—å"))
    bot.send_message(message.chat.id, "‚û°Ô∏è –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –∏–ª–∏ –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å", reply_markup=markup)
    bot.register_next_step_handler(message, save_news_image, news_text)

def save_news_image(message, news_text):
    if message.text == "‚ùå –û—Ç–º–µ–Ω–∏—Ç—å":
        admin_panel(message)
        return
    if message.text == "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å":
        bot.send_message(message.chat.id, "‚û°Ô∏è –ü—Ä–æ–ø—É—Å–∫ —Ñ–æ—Ç–æ. –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–∞–π–ª –∏–ª–∏ –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å.")
        bot.register_next_step_handler(message, save_news_file, news_text, None)
        return
    if message.photo:
        file_info = bot.get_file(message.photo[-1].file_id)
        data = bot.download_file(file_info.file_path)
        image_path = f"news_img_{int(time.time())}.jpg"
        with open(image_path, 'wb') as f:
            f.write(data)
        bot.send_message(message.chat.id, "‚û°Ô∏è –§–æ—Ç–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ. –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–∞–π–ª –∏–ª–∏ –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å.")
        bot.register_next_step_handler(message, save_news_file, news_text, image_path)
    else:
        bot.send_message(message.chat.id, "‚ùå –ù–µ —Ñ–æ—Ç–æ. –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–∞–π–ª –∏–ª–∏ –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å.")
        bot.register_next_step_handler(message, save_news_file, news_text, None)

def save_news_file(message, news_text, image_path=None):
    if message.text == "‚ùå –û—Ç–º–µ–Ω–∏—Ç—å":
        admin_panel(message)
        return
    file_path = None
    if message.text != "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å" and message.document:
        file_info = bot.get_file(message.document.file_id)
        data = bot.download_file(file_info.file_path)
        file_path = f"news_file_{int(time.time())}.pdf"
        with open(file_path, 'wb') as f:
            f.write(data)

    sheet_news.append_row([time.strftime('%Y-%m-%d %H:%M:%S'), news_text, image_path or "", file_path or ""])

    user_ids = [r[0] for r in sheet_users.get_all_values()]
    for uid in user_ids:
        try:
            if image_path:
                with open(image_path, 'rb') as f:
                    bot.send_photo(uid, f, caption=news_text)
                time.sleep(1)
            if file_path:
                with open(file_path, 'rb') as f:
                    bot.send_document(uid, f, caption="üìé –§–∞–π–ª")
                time.sleep(1)
            if not image_path and not file_path:
                bot.send_message(uid, news_text)
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ {uid}: {e}")
    bot.send_message(message.chat.id, "‚úÖ –ù–æ–≤–æ—Å—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –∏ —Ä–∞–∑–æ—Å–ª–∞–Ω–∞.")
    admin_panel(message)

# --- –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ ---
if __name__ == '__main__':
    bot.polling(none_stop=True)
